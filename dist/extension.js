(()=>{"use strict";var t={25:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.default=class{static leftParen="leftParen";static rightParen="rightParen";static leftBracket="leftBracket";static rightBracket="rightBracket";static leftBrace="leftBrace";static rightBrace="rightBrace";static colon="colon";static dot="dot";static dotDot="dotDot";static dotDotDot="dotDotDot";static comma="comma";static star="star";static slash="slash";static percent="percent";static plus="plus";static minus="minus";static pipe="pipe";static pipePipe="pipePipe";static caret="caret";static amp="amp";static ampAmp="ampAmp";static question="question";static bang="bang";static tilde="tilde";static equal="equal";static less="less";static lessEqual="lessEqual";static lessLess="lessLess";static greater="greater";static greaterEqual="greaterEqual";static greaterGreater="greaterGreater";static equalEqual="equalEqual";static bangEqual="bangEqual";static breakKeyword="break";static classKeyword="class";static constructKeyword="construct";static elseKeyword="else";static falseKeyword="false";static forKeyword="for";static foreignKeyword="foreign";static ifKeyword="if";static importKeyword="import";static inKeyword="in";static isKeyword="is";static nullKeyword="null";static returnKeyword="return";static staticKeyword="static";static superKeyword="super";static thisKeyword="this";static trueKeyword="true";static varKeyword="var";static whileKeyword="while";static field="field";static staticField="staticField";static tname="name";static number="number";static string="string";static interpolation="interpolation";static line="line";static error="error";static eof="eof";source;type;start;length;constructor(t,e,i,s){this.source=t,this.type=e,this.start=i,this.length=s}get text(){return this.source.substring(this.start,this.length)}get lineStart(){return this.source.lineAt(this.start)}get lineEnd(){return this.source.lineAt(this.start+this.length)}get columnStart(){return this.source.columnAt(this.start)}get columnEnd(){return this.source.columnAt(this.start+this.length)}toString(){return this.text}}},101:function(t,e,i){var s,a=this&&this.__createBinding||(Object.create?function(t,e,i,s){void 0===s&&(s=i);var a=Object.getOwnPropertyDescriptor(e,i);a&&!("get"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,s,a)}:function(t,e,i,s){void 0===s&&(s=i),t[s]=e[i]}),n=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),r=this&&this.__importStar||(s=function(t){return s=Object.getOwnPropertyNames||function(t){var e=[];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[e.length]=i);return e},s(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i=s(t),r=0;r<i.length;r++)"default"!==i[r]&&a(e,t,i[r]);return n(e,t),e}),o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const l=r(i(398)),c=o(i(446)),u=o(i(541)),h=o(i(25)),d=o(i(921)),f=r(i(928)),p=r(i(896)),m=i(383);e.default=class{trees=new Map;variables=new Map;searchPaths=[];pending=new Set;completions=[];staticCompletions=new Map;signatures=[];staticSignatures=new Map;constructor(){const t=new d.default("core",m.coreModules);this.parseFile(t)}addPathToSearch(t){this.searchPaths.push(t)}updateCompletionItems(){console.info("Regenerating completion items"),this.completions=[],this.staticCompletions=new Map,this.signatures=[],this.staticSignatures=new Map,this.variables=new Map;const t=new Set,e=new Set;for(let i of this.trees.entries()){const s=i[0],a=i[1],n=[];this.variables.set(s,n);const r=new Set;a.statements.filter((t=>"ClassStmt"===t.type)).forEach((i=>{const s=new Set;if(!e.has(i.name.text)){const t=new l.CompletionItem(i.name.text,l.CompletionItemKind.Class);t.detail=l.workspace.asRelativePath(i.name.source.path),this.completions.push(t),e.add(i.name.text)}for(let e of i.methods){let a="";e.constructKeyword&&(a+="construct "),e.foreignKeyword&&(a+="foreign "),e.staticKeyword&&(a+="static ");const o=e.parameters?e.parameters.map((t=>t.text)):[],c=`${a}${i.name.text}.${e.name.text}(${o.join(", ")})`;let u=l.workspace.asRelativePath(e.name.source.path);"core"!==e.name.source.path&&(u+=` (line ${e.name.lineStart})`);const h=new l.SignatureInformation(c,u);if(h.parameters=o.map((t=>new l.ParameterInformation(t))),e.staticKeyword||e.constructKeyword?(this.staticSignatures.has(i.name.text)||this.staticSignatures.set(i.name.text,[]),this.staticSignatures.get(i.name.text).push([e.name.text,h])):this.signatures.push([e.name.text,h]),e.staticKeyword||e.constructKeyword){if(this.staticCompletions.has(i.name.text)||this.staticCompletions.set(i.name.text,[]),!s.has(e.name.text)){const t=new l.CompletionItem(e.name.text,l.CompletionItemKind.Function);t.detail=`${a}${i.name.text}.${e.name.text}`,this.staticCompletions.get(i.name.text).push(t),s.add(e.name.text)}}else if(!t.has(e.name.text)){const s=new l.CompletionItem(e.name.text,l.CompletionItemKind.Method);s.detail=`${a}${i.name.text}.${e.name.text}`,this.completions.push(s),t.add(e.name.text)}const d=i.name.text,f=t=>{if(t.statements)for(let e of t.statements){for(let t of["body","blockArgument","thenBranch","elseBranch"])e[t]&&f(e[t]);if("VarStmt"!==e.type)if("AssignmentExpr"!==e.type||!e.target.name||"field"!==e.target.name.type&&"staticField"!==e.target.name.type);else{if(r.has(e.target.name.text))continue;r.add(e.target.name.text);const t=new l.CompletionItem(e.target.name.text,l.CompletionItemKind.Field);t.detail="class "+d,n.push(t)}else{if(r.has(e.name.text))continue;r.add(e.name.text);const t=new l.CompletionItem(e.name.text,l.CompletionItemKind.Variable);t.detail="class "+d,n.push(t)}}};try{e.body&&f(e.body)}catch(t){console.error(t)}}}))}}updateFileImports(t){const e=t.statements.filter((t=>"ImportStmt"===t.type&&'"meta"'!==t.path.text&&'"random"'!==t.path.text)).map((t=>{let e=t.path.text.replace(/\"/g,"");return!1===e.startsWith("./")&&(e="./"+e),!1===e.endsWith(".wren")&&(e+=".wren"),[e,f.dirname(t.path.source.path)]}));for(let t of e){const e=t[0];let i="";const s=[t[1],...this.searchPaths];let a=!1;for(let t of s){const s=f.join(t,e);if(this.trees.has(s)||this.pending.has(s)){a=!0;break}if(p.existsSync(s)){i=f.join(t,e);break}}a||(""!==i?(this.pending.add(i),p.readFile(i,((t,e)=>{t?console.warn("error reading file "+i):this.parseFile(new d.default(i,e.toString())),this.pending.delete(i),0===this.pending.size&&(console.log("Done reading and parsing files, updating completion items"),this.updateCompletionItems())}))):console.warn("couldn't find file in any path "+e))}0===this.pending.size&&(console.log("No new imports, updating completion items"),this.updateCompletionItems())}updateFileIfNotExists(t){this.trees.has(t.fileName)||this.parseDocument(t)}parseFile(t){console.log(`Parsing AST for ${t.path}`);const e=new c.default(t),i=new u.default(e).parseModule();return this.trees.set(t.path,i),this.updateFileImports(i),i}parseDocument(t){const e=new d.default(t.fileName,t.getText());return this.parseFile(e)}lexString(t){const e=new d.default("string",t),i=new c.default(e);let s=i.readToken();const a=[];for(;s.type!==h.default.eof;)a.push(s),s=i.readToken();return a}getLineInfo(t,e){const i=this.lexString(t).reverse();let s=!1,a=0,n=!0,r=!1;const o=[];for(let t of i)t.columnStart>e.character||(t.type===h.default.leftParen?s=!0:s||t.type!==h.default.comma?t.type===h.default.dot?(n=!0,r=!0):n&&t.type===h.default.tname&&(o.push({text:t.text,isClassName:t.length&&t.text[0].toUpperCase()===t.text[0],isField:t.length>=2&&"_"===t.text[0]&&"_"!==t.text[1],isStaticField:t.length>=2&&"_"===t.text[0]&&"_"===t.text[1]}),n=!1):a+=1);return console.log(`foundLeftParens: ${s}, currParam: ${a}, foundDot: ${n}, identifiers: ${JSON.stringify(o)}`),{foundLeftParens:s,currParam:a,foundDot:r,identifiers:o}}}},265:function(t,e,i){var s,a=this&&this.__createBinding||(Object.create?function(t,e,i,s){void 0===s&&(s=i);var a=Object.getOwnPropertyDescriptor(e,i);a&&!("get"in a?!e.__esModule:a.writable||a.configurable)||(a={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,s,a)}:function(t,e,i,s){void 0===s&&(s=i),t[s]=e[i]}),n=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),r=this&&this.__importStar||(s=function(t){return s=Object.getOwnPropertyNames||function(t){var e=[];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[e.length]=i);return e},s(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var i=s(t),r=0;r<i.length;r++)"default"!==i[r]&&a(e,t,i[r]);return n(e,t),e}),o=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.activate=function(t){console.log("wren-language-provider active!"),t.subscriptions.push(u.languages.registerSignatureHelpProvider(d,new p,"(",",")),t.subscriptions.push(u.languages.registerCompletionItemProvider(d,new m,".")),t.subscriptions.push(u.workspace.onDidSaveTextDocument((t=>{"wren"===t.languageId&&f.parseDocument(t)})));const e=u.workspace.getConfiguration("wren");for(let t of e.additionalModuleDirectories)if(void 0===u.workspace.workspaceFolders);else for(let e of u.workspace.workspaceFolders){const i=c.join(e.uri.fsPath,t);h.existsSync(i)&&f.addPathToSearch(i)}},e.deactivate=function(){};const l=o(i(101)),c=r(i(928)),u=r(i(398)),h=r(i(896)),d={language:"wren",scheme:"file"},f=new l.default;class p{provideSignatureHelp(t,e,i){const s=t.lineAt(e.line).text;return new Promise(((i,a)=>{f.updateFileIfNotExists(t);const n=f.getLineInfo(s,e),r=new u.SignatureHelp;r.activeParameter=n.currParam,r.activeSignature=0,2===n.identifiers.length&&n.identifiers[1].isClassName?f.staticSignatures.has(n.identifiers[1].text)&&(r.signatures=f.staticSignatures.get(n.identifiers[1].text).filter((t=>t[0]===n.identifiers[0].text)).map((t=>t[1]))):r.signatures=f.signatures.filter((t=>t[0]===n.identifiers[0].text)).map((t=>t[1])),i(r)}))}}class m{provideCompletionItems(t,e,i){const s=t.lineAt(e.line).text;return new Promise(((i,a)=>{f.updateFileIfNotExists(t);const n=f.getLineInfo(s,e);let r=f.completions.filter((t=>!n.foundDot||t.kind!==u.CompletionItemKind.Class)).filter((t=>t.kind!==u.CompletionItemKind.Method||0===n.identifiers.length||!n.identifiers[0].isClassName));if(n.identifiers.length&&n.identifiers[0].isClassName){if(f.staticCompletions.has(n.identifiers[0].text)){const t=f.staticCompletions.get(n.identifiers[0].text);r=r.concat(t)}}else if(f.variables.has(t.fileName)){const e=f.variables.get(t.fileName).filter((t=>!n.foundDot||t.kind!==u.CompletionItemKind.Field));r=r.concat(e)}i(r)}))}}},383:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.coreModules=void 0,e.coreModules="\nclass Class {\n  name {}\n  supertype {}\n}\nclass Sound {\n  construct load_ogg(file) {}\n  play() {}\n  play(volume, pitch, pan) {}\n}\nclass Color {\n  static BLACK {}\n  static WHITE {}\n  static RED {}\n  static GREEN {}\n  static BLUE {}\n  r {}\n  g {}\n  b {}\n  a {}\n  toString {}\n  clamp {}\n  construct new(r, g, b, a) {}\n  construct new(r, g, b) {}\n  construct new(rgb) {}\n}\n\nclass Draw {\n    foreign static rectangle(x, y, width, height, r, g, b, a, fill)\n    foreign static circle(x, y, radius, r, g, b, a, fill)\n    foreign static line(x1, y1, x2, y2, r, g, b, a)\n    foreign static put_pixel(x, y, r, g, b)\n    foreign static clear(r, g, b, a)\n    foreign static text(x, y, msg, r, g, b, a)\n    static rectangle(pos, size, color, fill) {}\n    static rectangle(x, y, width, height, color, fill) {}\n    static circle(pos, radius, color, fill) {}\n    static line(start, end, color) {}\n    static put_pixel(pos, color) {}\n    static get_pixel(x, y) {}\n    static get_pixel(pos) {}\n    static clear(r, g, b) {}\n    static clear(color) {}\n    static clear() {}\n    static text(pos, msg, color) {}\n    static text(x, y, msg, color) {}\n}\n\nclass Engine {\n    foreign static init(width, height, title)\n    foreign static destroy()\n    foreign static get_os()\n    static OS_NIX {}\n    static OS_MACOS {}\n    static OS_WINDOWS {}\n    static OS_UNKNOWN {}\n    foreign static get_build_id()\n    foreign static get_build_string()\n}\n\n\nclass FileIO {\n    construct open(path, mode) {}\n    close() {}\n    read_byte() {}\n    write_byte(byte) {}\n    read_char() {}\n    read() {}\n    write(data) {}\n    read_line() {}\n    toString {}\n}\nclass Input {\n    foreign static mouse_x()\n    foreign static mouse_y()\n    static mouse_pos() {}\n    foreign static get_mouse_button()\n    static button_mouse_left {}\n    static button_mouse_right {}\n    static button_mouse_middle {}\n    foreign static get_keycode(key_name)\n    foreign static is_key_pressed(keycode)\n    foreign static is_key_held(keycode)\n}\n\nclass Keycodes {\n    static F1 {}\n    static F2 {}\n    static F3 {}\n    static F4 {}\n    static F5 {}\n    static F6 {}\n    static F7 {}\n    static F8 {}\n    static F9 {}\n    static F10 {}\n    static F11 {}\n    static F12 {}\n    static BACKSPACE {}\n    static TAB {}\n    static RETURN {}\n    static SHIFT {}\n    static CONTROL {}\n    static ALT {}\n    static PAUSE {}\n    static CAPSLOCK {}\n    static ESCAPE {}\n    static SPACE {}\n    static PAGEUP {}\n    static PAGEDOWN {}\n    static END {}\n    static HOME {}\n    static LEFT {}\n    static UP {}\n    static RIGHT {}\n    static DOWN {}\n    static INSERT {}\n    static DELETE {}\n    static NUMLOCK {}\n    static SCROLLLOCK {}\n    static LEFT_SHIFT {}\n    static RIGHT_SHIFT {}\n    static LEFT_CONTROL {}\n    static RIGHT_CONTROL {}\n    static LEFT_ALT {}\n    static RIGHT_ALT {}\n    static SEMICOLON {}\n    static EQUAL {}\n    static COMMA {}\n    static MINUS {}\n    static DOT {}\n    static SLASH {}\n    static BACKTICK {}\n    static LEFT_SQUARE_BRACKET {}\n    static BACKSLASH {}\n    static RIGHT_SQUARE_BRACKET {}\n    static TICK {}\n}\n\nclass Math {\n    static min(a, b) {}\n    static max(a, b) {}\n    static clamp(value, min, max) {}\n    static map(value, old_min, old_max, new_min, new_max) {}\n    static map_clamped(value, old_min, old_max, new_min, new_max) {}\n    static lerp(value, target, factor) {}\n    static abs(a) {}\n    static floor(a) {}\n    static ceil(a) {}\n    static sqrt(a) {}\n    static pow(a, b) {}\n    static sin(a) {}\n    static cos(a) {}\n    static atan2(a, b) {}\n    static fmod(a, b) {}\n    static rad2deg(a) {}\n    static deg2rad(a) {}\n}\n\nclass Random {\n    foreign static seed(seed)\n    foreign static rand()\n    foreign static irange(min, max)\n    foreign static perlin(x, y, z, x_wrap, y_wrap, z_wrap, seed)\n}\n\nclass Surface {\n    foreign static new(width, height)\n    foreign static new_from_png(path)\n    foreign static set_target(surfaceid)\n    foreign static reset_target()\n    foreign static draw(surfaceid, x, y, alpha)\n    static draw_centered(surfaceid, pos, alpha) {}\n    foreign static draw_angle(surfaceid, x, y, angle)\n    static draw_angle(surfaceid, pos, angle) {}\n    foreign static get_width(surfaceid)\n    foreign static get_height(surfaceid)\n    foreign static destroy(surfaceid)\n    foreign static resize(surfaceid, width, height)\n}\nclass Vector {\n    static ZERO {}\n    static UP {}\n    static DOWN {}\n    static LEFT {}\n    static RIGHT {}\n    x { _x }\n    y { _y }\n    x=(value) {}\n    y=(value) {}\n    toString {}\n    construct new(x, y) {}\n    length_squared {}\n    length {}\n    normalized {}\n    angle { (-_y).atan(_x) }\n    distance_to(vec) {}\n    dot(vec) {}\n    distance_to_line(vec1, vec2) {}\n    angle_to(vec) {}\n    rotated(angle) {}\n    clamped(min, max) {}\n}\n\nclass Fiber {\n  static abort(message) {}\n  static current {}\n  construct new(function) {}\n  static suspend() {}\n  static yield() {}\n  static yield(value) {}\n\n  call() {}\n  call(value) {}\n  error {}\n  isDone {}\n  try() {}\n  transfer() {}\n  transfer(value) {}\n  transferError(error) {}\n}\n\nclass Fn {\n  construct new(function) {}\n\n  arity {}\n  call(args) {}\n}\n\nclass List is Sequence {\n  static filled(size, element) {}\n  construct new() {}\n\n  add(item) {}\n  clear() {}\n  count {}\n  insert(index, item) {}\n  removeAt(index) {}\n}\n\nclass Map is Sequence {\n  construct new() {}\n  clear() {}\n  containsKey(key) {}\n  count {}\n  keys {}\n  remove(key) {}\n  values {}\n}\n\nclass Num {\n  static fromString(value) {}\n  static pi {}\n  static largest {}\n  static smallest {}\n\n  abs {}\n  acos {}\n  asin {}\n  atan {}\n  atan(x) {}\n  ceil {}\n  cos {}\n  floor {}\n  isInfinity {}\n  isInteger {}\n  isNan {}\n  log {}\n  pow(power) {}\n  round {}\n  sin {}\n  sqrt {}\n  tan {}\n}\n\nclass Object {\n  static same(obj1, obj2) {}\n}\n\nclass Sequence {\n  all(predicate) {}\n  any(predicate) {}\n  contains(element) {}\n  count {}\n  count(predicate) {}\n  each(function) {}\n  isEmpty {}\n  join(separator) {}\n  join() {}\n  map(transformation) {}\n  reduce(function) {}\n  reduce(seed, function) {}\n  skip(count) {}\n  take(count) {}\n  toList {}\n  where(predicate) {}\n}\n\nclass String {\n  static fromCodePoint(codePoint) {}\n  bytes {}\n  codePoints {}\n  contains(other) {}\n  count {}\n  endsWith(suffix) {}\n  indexOf(search) {}\n  indexOf(search, start) {}\n  replace(old, swap) {}\n  split(separator) {}\n  startsWith(prefix) {}\n  trim() {}\n  trim(chars) {}\n  trimEnd() {}\n  trimEnd(chars) {}\n  trimStart() {}\n  trimStart(chars) {}\n}\n\nclass System {\n  static clock {}\n  static gc() {}\n  static print() {}\n  static print(object) {}\n  static printAll(sequence) {}\n  static write(object) {}\n}\n"},398:t=>{t.exports=require("vscode")},446:function(t,e,i){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(i(865)),n=s(i(25)),r=new Map([["break",n.default.breakKeyword],["class",n.default.classKeyword],["construct",n.default.constructKeyword],["else",n.default.elseKeyword],["false",n.default.falseKeyword],["for",n.default.forKeyword],["foreign",n.default.foreignKeyword],["if",n.default.ifKeyword],["import",n.default.importKeyword],["in",n.default.inKeyword],["is",n.default.isKeyword],["null",n.default.nullKeyword],["return",n.default.returnKeyword],["static",n.default.staticKeyword],["super",n.default.superKeyword],["this",n.default.thisKeyword],["true",n.default.trueKeyword],["var",n.default.varKeyword],["while",n.default.whileKeyword]]),o={[a.default.leftParen]:[n.default.leftParen],[a.default.rightParen]:[n.default.rightParen],[a.default.leftBracket]:[n.default.leftBracket],[a.default.rightBracket]:[n.default.rightBracket],[a.default.leftBrace]:[n.default.leftBrace],[a.default.rightBrace]:[n.default.rightBrace],[a.default.colon]:[n.default.colon],[a.default.comma]:[n.default.comma],[a.default.star]:[n.default.star],[a.default.slash]:[n.default.slash],[a.default.percent]:[n.default.percent],[a.default.plus]:[n.default.plus],[a.default.minus]:[n.default.minus],[a.default.tilde]:[n.default.tilde],[a.default.caret]:[n.default.caret],[a.default.question]:[n.default.question],[a.default.lineFeed]:[n.default.line],[a.default.pipe]:[n.default.pipe,a.default.pipe,n.default.pipePipe],[a.default.amp]:[n.default.amp,a.default.amp,n.default.ampAmp],[a.default.bang]:[n.default.bang,a.default.equal,n.default.bangEqual],[a.default.equal]:[n.default.equal,a.default.equal,n.default.equalEqual],[a.default.dot]:[n.default.dot,a.default.dot,n.default.dotDot,a.default.dot,n.default.dotDotDot]};e.default=class{source;start;current;interpolations;constructor(t){this.source=t,this.start=0,this.current=0,this.interpolations=[]}readToken(){if(this.current>=this.source.length)return this.makeToken(n.default.eof);this.skipWhitespace(),this.start=this.current;const t=this.source.index(this.current);if(this.advance(),this.interpolations.length>0){const e=this.interpolations.length-1;if(t===a.default.leftParen)this.interpolations[e]++;else if(t===a.default.rightParen&&(this.interpolations[e]--,0===this.interpolations[e]))return this.interpolations.pop(),this.readString()}if(t in o){const e=o[t];let i=e[0],s=1;for(;1<e.length&&this.match(e[s]);)i=e[s+1],s+=2;return this.makeToken(i.toString())}return t===a.default.less?this.match(a.default.less)?this.makeToken(n.default.lessLess):this.match(a.default.equal)?this.makeToken(n.default.lessEqual):this.makeToken(n.default.less):t===a.default.greater?this.match(a.default.greater)?this.makeToken(n.default.greaterGreater):this.match(a.default.equal)?this.makeToken(n.default.greaterEqual):this.makeToken(n.default.greater):t===a.default.underscore?this.readField():t===a.default.quote?this.readString():t===a.default.zero&&this.peek()===a.default.lowerX?this.readHexNumber():a.default.isDigit(t)?this.readNumber():a.default.isAlpha(t)?this.readName():this.makeToken(n.default.error)}skipWhitespace(){for(;;){const t=this.peek();if(t===a.default.tab||t===a.default.carriageReturn||t===a.default.space)this.advance();else if(t===a.default.slash&&this.peek(1)===a.default.slash)for(;this.peek()!==a.default.lineFeed&&!this.isAtEnd;)this.advance();else if(t===a.default.slash&&this.peek(1)===a.default.star)this.advance(),this.advance();else{if(t!==a.default.slash||this.peek(1)!==a.default.star)break;{this.advance(),this.advance();let t=1;for(;t>0;){if(this.isAtEnd)return;if(this.peek()===a.default.slash&&this.peek(1)===a.default.star)this.advance(),this.advance(),t++;else if(this.peek()===a.default.star&&this.peek(1)===a.default.slash){if(this.advance(),this.advance(),t--,0===t)break}else this.advance()}}}}}readField(){let t=n.default.field;for(this.match(a.default.underscore)&&(t=n.default.staticField);this.match((t=>a.default.isAlphaNumeric(t))););return this.makeToken(t)}readString(){let t=n.default.string;for(;this.current<this.source.length-1;){const e=this.source.index(this.current);if(this.advance(),e===a.default.backslash)this.advance();else{if(e===a.default.percent){this.advance(),this.interpolations.push(1),t=n.default.interpolation;break}if(e===a.default.quote)break}}return this.makeToken(t)}readHexNumber(){for(this.advance();this.match((t=>a.default.isHexDigit(t))););return this.makeToken(n.default.number)}readNumber(){for(;this.match((t=>a.default.isDigit(t))););return this.makeToken(n.default.number)}readName(){for(;this.match((t=>a.default.isAlphaNumeric(t))););const t=this.source.substring(this.start,this.current-this.start);let e=n.default.tname;return r.has(t)&&(e=r.get(t)),new n.default(this.source,e,this.start,this.current-this.start)}get isAtEnd(){return this.current>=this.source.length}advance(){this.current++}peek(t=0){return this.current+t>=this.source.length?-1:this.source.index(this.current+t)}match(t){if(this.isAtEnd)return!1;const e=this.source.index(this.current);if("function"==typeof t){if(!0!==t(e))return!1}else if(e!==t)return!1;return this.advance(),!0}makeToken(t){return new n.default(this.source,t,this.start,this.current-this.start)}}},541:function(t,e,i){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(i(25)),n=[a.default.equalEqual,a.default.bangEqual],r=[a.default.less,a.default.lessEqual,a.default.greater,a.default.greaterEqual],o=[a.default.lessLess,a.default.greaterGreater],l=[a.default.dotDot,a.default.dotDotDot],c=[a.default.plus,a.default.minus],u=[a.default.star,a.default.slash,a.default.percent],h=[a.default.minus,a.default.bang,a.default.tilde],d=[a.default.pipePipe,a.default.ampAmp,a.default.equalEqual,a.default.bangEqual,a.default.isKeyword,a.default.less,a.default.lessEqual,a.default.greater,a.default.greaterEqual,a.default.pipe,a.default.caret,a.default.amp,a.default.lessLess,a.default.greaterGreater,a.default.dotDot,a.default.dotDotDot,a.default.plus,a.default.minus,a.default.star,a.default.slash,a.default.percent];e.default=class{lexer;current;previous;problems;constructor(t){this.lexer=t,this.current=t.readToken(),this.problems=[]}parseModule(){this.ignoreLine();const t=[];for(;this.peek()!==a.default.eof;){const e=this.definition();if(t.push(e),this.peek()===a.default.eof)break;this.consumeLine("Expect newline.")}return this.consume(a.default.eof,"Expect end of input."),{type:"Module",statements:t}}definition(){if(this.match(a.default.classKeyword))return this.finishClass();if(this.match(a.default.foreignKeyword)){const t=this.previous;return this.consume(a.default.classKeyword,"Expect 'class' after 'foreign'."),this.finishClass(t)}let t=[];if(this.match(a.default.importKeyword)){const e=this.consume(a.default.string,"Expect import path.");if(this.match(a.default.forKeyword))for(this.ignoreLine(),t=[];t.push(this.consume(a.default.tname,"Expect imported variable name.")),this.match(a.default.comma);)this.ignoreLine();return{type:"ImportStmt",path:e,variables:t}}if(this.match(a.default.varKeyword)){const t=this.consume(a.default.tname,"Expect variable name.");let e;return this.match(a.default.equal)&&(e=this.expression()),{type:"VarStmt",name:t,initializer:e}}return this.statement()}finishClass(t){const e=this.consume(a.default.tname,"Expect class name.");let i;this.match(a.default.isKeyword)&&(i=this.consume(a.default.tname,"Expect name of superclass."));const s=[];for(this.consume(a.default.leftBrace,"Expect '{' after class name."),this.ignoreLine();!this.match(a.default.rightBrace)&&this.peek()!==a.default.eof&&(s.push(this.method()),!this.match(a.default.rightBrace));)this.consumeLine("Expect newline after definition in class.");return{type:"ClassStmt",foreignKeyword:t,name:e,superclass:i,methods:s}}method(){let t,e,i,s;this.match(a.default.foreignKeyword)&&(t=this.previous),this.match(a.default.staticKeyword)&&(e=this.previous),this.match(a.default.constructKeyword)&&(i=this.previous);let n,r=[],o=!1;return this.match(a.default.leftBracket)?(r=this.parameterList(),this.consume(a.default.rightBracket,"Expect ']' after parameters."),o=!1):this.matchAny(d)?o=!0:this.matchAny([a.default.bang,a.default.tilde])?o=!1:(this.consume(a.default.tname,"Expect method name."),o=!0),s=this.previous,this.match(a.default.leftParen)&&(o||this.error("A parameter list is not allowed for this method."),this.ignoreLine(),this.match(a.default.rightParen)||(r=this.parameterList(),this.ignoreLine(),this.consume(a.default.rightParen,"Expect ')' after parameters."))),void 0===t&&(this.consume(a.default.leftBrace,"Expect '{' before method body."),n=this.finishBody(r)),{type:"Method",foreignKeyword:t,staticKeyword:e,constructKeyword:i,name:s,body:n,parameters:r}}statement(){if(this.match(a.default.breakKeyword))return{type:"BreakStmt",keyword:this.previous};let t,e;if(this.match(a.default.ifKeyword)){this.consume(a.default.leftParen,"Expect '(' after 'if'."),this.ignoreLine();const e=this.expression();this.consume(a.default.rightParen,"Expect ')' after if condition.");const i=this.statement();return this.match(a.default.elseKeyword)&&(t=this.statement()),{type:"IfStmt",condition:e,thenBranch:i,elseBranch:t}}if(this.match(a.default.forKeyword)){this.consume(a.default.leftParen,"Expect '(' after 'for'.");const t=this.consume(a.default.tname,"Expect for loop variable name.");this.consume(a.default.inKeyword,"Expect 'in' after loop variable."),this.ignoreLine();const e=this.expression();return this.consume(a.default.rightParen,"Expect ')' after loop expression."),{type:"ForStmt",variable:t,iterator:e,body:this.statement()}}if(this.match(a.default.whileKeyword)){this.consume(a.default.leftParen,"Expect '(' after 'while'."),this.ignoreLine();const t=this.expression();return this.consume(a.default.rightParen,"Expect ')' after while condition."),{type:"WhileStmt",condition:t,body:this.statement()}}if(this.match(a.default.returnKeyword)){const t=this.previous;return this.peek()!==a.default.line&&(e=this.expression()),{type:"ReturnStmt",keyword:t,value:e}}if(this.match(a.default.leftBrace)){const t=[];for(this.ignoreLine();this.peek()!==a.default.rightBrace&&this.peek()!==a.default.eof&&(t.push(this.definition()),this.peek()!==a.default.rightBrace);)this.consumeLine("Expect newline after statement.");return this.consume(a.default.rightBrace,"Expect '}' after block."),{type:"BlockStmt",statements:t}}return this.expression()}finishBody(t){if(this.match(a.default.rightBrace))return{type:"Body",parameters:t,expression:void 0,statements:[]};if(!this.matchLine()){const e=this.expression();return this.ignoreLine(),this.consume(a.default.rightBrace,"Expect '}' at end of block."),{type:"Body",parameters:t,expression:e,statements:void 0}}if(this.match(a.default.rightBrace))return{type:"Body",parameters:t,expression:void 0,statements:[]};const e=[];for(;this.peek()!==a.default.eof&&(e.push(this.definition()),this.consumeLine("Expect newline after statement."),!this.match(a.default.rightBrace)););return{type:"Body",parameters:t,expression:void 0,statements:e}}expression(){return this.assignment()}assignment(){const t=this.conditional();return this.match(a.default.equal)?{type:"AssignmentExpr",target:t,equal:this.previous,value:this.assignment()}:t}conditional(){const t=this.logicalOr();return this.match(a.default.question)?{type:"ConditionalExpr",condition:t,question:this.previous,thenBranch:this.conditional(),colon:this.consume(a.default.colon,"Expect ':' after then branch of conditional operator."),elseBranch:this.assignment()}:t}logicalOr(){return this.parseInfix([a.default.pipePipe],(()=>this.logicalAnd()))}logicalAnd(){return this.parseInfix([a.default.ampAmp],(()=>this.equality()))}equality(){return this.parseInfix(n,(()=>this.typeTest()))}typeTest(){return this.parseInfix([a.default.isKeyword],(()=>this.comparison()))}comparison(){return this.parseInfix(r,(()=>this.bitwiseOr()))}bitwiseOr(){return this.parseInfix([a.default.pipe],(()=>this.bitwiseXor()))}bitwiseXor(){return this.parseInfix([a.default.caret],(()=>this.bitwiseAnd()))}bitwiseAnd(){return this.parseInfix([a.default.amp],(()=>this.bitwiseShift()))}bitwiseShift(){return this.parseInfix(o,(()=>this.range()))}range(){return this.parseInfix(l,(()=>this.term()))}term(){return this.parseInfix(c,(()=>this.factor()))}factor(){return this.parseInfix(u,(()=>this.prefix()))}prefix(){return this.matchAny(h)?{type:"PrefixExpr",operator:this.previous,right:this.prefix()}:this.call()}call(){let t=this.primary();for(;;)if(this.match(a.default.leftBracket))t={type:"SubscriptExpr",receiver:t,leftBracket:this.previous,args:this.argumentList(),rightBracket:this.consume(a.default.rightBracket,"Expect ']' after subscript arguments.")};else{if(!this.match(a.default.dot))break;{const e=this.consume(a.default.tname,"Expect method name after '.'.");t=this.methodCall(t,e)}}return t}methodCall(t,e){var i=this.finishCall();return{type:"CallExpr",receiver:t,name:e,args:i[0],blockArgument:i[1]}}finishCall(){let t,e=[];this.match(a.default.leftParen)&&(this.match(a.default.rightParen)?e=[]:(e=this.argumentList(),this.consume(a.default.rightParen,"Expect ')' after arguments.")));let i=[];return this.match(a.default.leftBrace)&&(this.match(a.default.pipe)&&(i=this.parameterList(),this.consume(a.default.pipe,"Expect '|' after block parameters.")),t=this.finishBody(i)),[e,t]}argumentList(){let t=[];for(this.ignoreLine();t.push(this.expression()),this.match(a.default.comma);)this.ignoreLine();return t}parameterList(){let t=[];for(;t.push(this.consume(a.default.tname,"Expect parameter name.")),this.match(a.default.comma);)this.ignoreLine();return t}primary(){return this.match(a.default.leftParen)?this.grouping():this.match(a.default.leftBracket)?this.listLiteral():this.match(a.default.leftBrace)?this.mapLiteral():this.match(a.default.tname)?this.methodCall(void 0,this.previous):this.match(a.default.superKeyword)?this.superCall():this.match(a.default.falseKeyword)||this.match(a.default.trueKeyword)?{type:"BoolExpr",value:this.previous}:this.match(a.default.nullKeyword)?{type:"NullExpr",value:this.previous}:this.match(a.default.thisKeyword)?{type:"ThisExpr",keyword:this.previous}:this.match(a.default.field)?{type:"FieldExpr",name:this.previous}:this.match(a.default.staticField)?{type:"StaticFieldExpr",name:this.previous}:this.match(a.default.number)?{type:"NumExpr",value:this.previous}:this.match(a.default.string)?{type:"StringExpr",value:this.previous}:this.peek()===a.default.interpolation?this.stringInterpolation():(this.error("Expect expression."),{value:this.previous})}grouping(){return{type:"GroupingExpr",leftParen:this.previous,expression:this.expression(),rightParen:this.consume(a.default.rightParen,"Expect ')' after expression.")}}listLiteral(){const t=this.previous,e=[];for(this.ignoreLine();this.peek()!==a.default.rightBracket&&(e.push(this.expression()),this.ignoreLine(),this.match(a.default.comma));)this.ignoreLine();return{type:"ListExpr",leftBracket:t,elements:e,rightBracket:this.consume(a.default.rightBracket,"Expect ']' after list elements.")}}mapLiteral(){const t=this.previous,e=[];for(this.ignoreLine();this.peek()!==a.default.rightBrace;){const t=this.expression();this.consume(a.default.colon,"Expect ':' after map key.");const i=this.expression();if(e.push({type:"MapEntry",key:t,value:i}),this.ignoreLine(),!this.match(a.default.comma))break;this.ignoreLine()}return{type:"MapExpr",leftBrace:t,entries:e,rightBrace:this.consume(a.default.rightBrace,"Expect '}' after map entries.")}}superCall(){let t;this.match(a.default.dot)&&(t=this.consume(a.default.tname,"Expect method name after 'super.'."));const e=this.finishCall();return{type:"SuperExpr",name:t,args:e[0],blockArgument:e[1]}}stringInterpolation(){let t=[],e=[];for(;this.match(a.default.interpolation);)t.push(this.previous),e.push(this.expression());return t.push(this.consume(a.default.string,"Expect end of string interpolation.")),{type:"InterpolationExpr",strings:t,expressions:e}}parseInfix(t,e){let i=e();for(;this.matchAny(t);){var s=this.previous;this.ignoreLine(),i={type:"InfixExpr",left:i,operator:s,right:e()}}return i}match(t){return this.peek()!==t?null:this.consumeNext()}matchAny(t){for(let i of t){var e=this.match(i);if(e)return e}return null}matchLine(){if(!this.match(a.default.line))return!1;for(;this.match(a.default.line););return!0}ignoreLine(){this.matchLine()}consumeLine(t){this.consume(a.default.line,t),this.ignoreLine()}consumeNext(){return this.peek(),this.previous=this.current,this.current=void 0,this.previous}consume(t,e){const i=this.consumeNext();return i.type!==t&&this.error(e),i}peek(){return void 0===this.current&&(this.current=this.lexer.readToken()),this.current.type}error(t){this.problems.push([t,[void 0!==this.current?this.current:this.previous]])}}},865:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class i{static tab=9;static lineFeed=10;static carriageReturn=13;static space=32;static bang=33;static quote=34;static percent=37;static amp=38;static leftParen=40;static rightParen=41;static star=42;static plus=43;static comma=44;static minus=45;static dot=46;static slash=47;static zero=48;static nine=57;static colon=58;static less=60;static equal=61;static greater=62;static question=63;static upperA=65;static upperF=70;static upperZ=90;static leftBracket=91;static backslash=92;static rightBracket=93;static caret=94;static underscore=95;static lowerA=97;static lowerF=102;static lowerX=120;static lowerZ=122;static leftBrace=123;static pipe=124;static rightBrace=125;static tilde=126;static isAlpha(t){return t>=i.lowerA&&t<=i.lowerZ||t>=i.upperA&&t<=i.upperZ||t===i.underscore}static isDigit(t){return t>=i.zero&&t<=i.nine}static isAlphaNumeric(t){return i.isAlpha(t)||i.isDigit(t)}static isHexDigit(t){return t>=i.zero&&t<=i.nine||t>=i.lowerA&&t<=i.lowerF||t>=i.upperA&&t<=i.upperF}static isLowerAlpha(t){return t>=i.lowerA&&t<=i.lowerZ}}e.default=i},896:t=>{t.exports=require("fs")},921:function(t,e,i){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(i(865));e.default=class{path;string;lines;constructor(t,e){this.path=t,this.string=e,this.lines=[0];for(let t=0;t<e.length;t++)this.string.charCodeAt(t)===a.default.lineFeed&&this.lines.push(t+1)}index(t){return this.string.charCodeAt(t)}get length(){return this.string.length}columnAt(t){let e=1;for(let i=t-1;i>0&&this.string.charCodeAt(i)!==a.default.lineFeed;i--)e+=1;return e}lineAt(t){for(let e=0;e<this.lines.length;e++)if(t<this.lines[e])return e;return this.lines.length}getLine(t){return this.string.substring(this.lines[t-1],this.lines[t]-1)}substring(t,e){return this.string.substr(t,e)}}},928:t=>{t.exports=require("path")}},e={},i=function i(s){var a=e[s];if(void 0!==a)return a.exports;var n=e[s]={exports:{}};return t[s].call(n.exports,n,n.exports,i),n.exports}(265);module.exports=i})();